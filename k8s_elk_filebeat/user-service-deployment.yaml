apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
      annotations:
        prometheus.io/scrape: "true"  # Enable scraping
        prometheus.io/port: "8080"    # The port to scrape
        prometheus.io/path: "/actuator/prometheus"
    spec:
      containers:
        - name: user-service
          image: localhost/user-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql:3306/userdb1
            - name: SPRING_DATASOURCE_USERNAME
              value: myuser
            - name: SPRING_DATASOURCE_PASSWORD
              value: mypassword
            - name: SPRING_RABBITMQ_HOST
              value: rabbitmq
            - name: SPRING_RABBITMQ_PORT
              value: "5672"
            - name: LOG_PATH
              value: /logs/app.log
          volumeMounts:
            - name: shared-logs
              mountPath: /logs

        - name: filebeat
          image: docker.elastic.co/beats/filebeat:8.12.0
          args: ["-e", "-c", "/etc/filebeat/filebeat.yml"]
          volumeMounts:
            - name: config
              mountPath: /etc/filebeat/filebeat.yml
              subPath: filebeat.yml
            - name: shared-logs
              mountPath: /logs

      volumes:
        - name: shared-logs
          emptyDir: {}
        - name: config
          configMap:
            name: filebeat-config
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
spec:
  selector:
    app: user-service
  ports:
    - port: 8080
      targetPort: 8080
  type: ClusterIP
